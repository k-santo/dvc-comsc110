Kristofer Santo 1768976
COMSC-110-8076

1. Objective (1 sentence brief description of what this will do): To allow for the user to input a file for its lines to be decoded and outputted by the console

2. Requirements (any and all requirements organized by input, processing, output, data):
INPUT (any data items to be input):
-secretFile
-line (from file)

PROCESSING (list of significant parts of the objective that will become the list of code blocks in program):
1. data definitions
2. user introduction
3. open input file
4. input a line from the input file
5. decode the inputted line by minus one ASCII value
6. output the line the console

OUTPUT (list of anything output: introduction, data items, labels, prompts):
-line

DATA (list of all data items: definition, data type, formatting, or any other specifications):
-secretFile (string) name of the secret.txt file that will be the output
-line (string) line from file to be encoded and outputted
-i (integer) loop index

3. Algorithm instructions (recipe)
***data
10 secretFile = "secret.txt"
20 i = 0
***introduction 
30 output introduction: objective, author, instructions/rules
***
40 open secretFile for input
50 input line from secretFile
55 skip to next line of fileName
60 line[i] = line[i] - 1
70 i = i + 1
80 if i<line.length, skip to 90
90 output line
100 i = 0
110 if !EOF, then skip to 80
999 END

4. Test cases (list purpose of each test case, any input values, and expected results)

Test case #1: 
purpose: normal input values, multiple lines
inputs: "Efdpefe!Mjof", "Ifmmp-!Xpsme""
expected final result: 
Objective: To allow for the user to input a file for its lines to be decoded and outputted by the console
Author:Kristofer Santo
Decoded Line
Hello, World!

10 secretFile = "secret.txt"
20 i = 0
30 "Objective: To allow for the user to input a file for its lines to be decoded and outputted by the console
    Author:Kristofer Santo"
40 open secretFile (input)
50 line = "Efdpefe!Mjof"
60 line[0] = "E" - 1 = "D"
70 i = 0 + 1 = 1
80 True
60 line[1] = "f" - 1 = "e"
70 i = 1 + 1 = 2
80 True
60 line[2] = "d" - 1 = "c"
70 i = 2 + 1 = 3
80 True
60 line[3] = "p" - 1 = "o"
70 i = 3 + 1 = 4
80 True
60 line[4] = "e" - 1 = "d"
70 i = 4 + 1 = 5
80 True
60 line[5] = "f" - 1 = "e"
70 i = 5 + 1 = 6
80 True
60 line[6] = "e" - 1 = "d"
70 i = 6 + 1 = 7
80 True
60 line[7] = "!" - 1 = " "
70 i = 7 + 1 = 8
80 True
60 line[8] = "M" - 1 = "L"
70 i = 8 + 1 = 9
80 True
60 line[9] = "j" - 1 = "i"
70 i = 9 + 1 = 10
80 True
60 line[10] = "o" - 1 = "n"
70 i = 10 + 1 = 11
80 True
60 line[11] = "f" - 1 = "e"
70 i = 11 + 1 = 12
80 False
90 "Decoded Line"
100 i = 0
110 True
50 line = "Ifmmp-!Xpsme""
60 line[0] = "I" - 1 = "H"
70 i = 0 + 1 = 1
80 True
60 line[1] = "f" - 1 = "e"
70 i = 1 + 1 = 2
80 True
60 line[2] = "m" - 1 = "l"
70 i = 2 + 1 = 3
80 True
60 line[3] = "m" - 1 = "l"
70 i = 3 + 1 = 4
80 True
60 line[4] = "p" - 1 = "o"
70 i = 4 + 1 = 5
80 True
60 line[5] = "-" - 1 = ","
70 i = 5 + 1 =6
80 True
60 line[6] = "!" - 1 = " "
70 i = 6 + 1 = 7
80 True
60 line[7] = "X" - 1 = "W" 
70 i = 7 + 1 = 8
80 True
60 line[8] = "p" - 1 = "o"
70 i = 8 + 1 = 9
80 True
60 line[9] = "s" - 1 = "r"
70 i = 9 + 1 = 10
80 True
60 line[10] = "m" - 1 = "l"
70 i = 10 + 1 = 11
80 True
60 line[11] = "e" - 1 = "d"
70 i = 11 + 1 = 12
80 True
60 line[12] = """ - 1 = "!"
70 i = 12 + 1 = 13
80 False
90 "Hello World"
100 i=0
110 False
999 END

Test case #2:
purpose: normal input values, single line
inputs: "Ifmmp-!Xpsme"", 
expected final result: 
Objective: To allow for the user to input a file for its lines to be decoded and outputted by the console
Author:Kristofer Santo
Hello, World!

10 secretFile = "secret.txt"
20 i = 0
30 "Objective: To allow for the user to input a file for its lines to be decoded and outputted by the console
    Author:Kristofer Santo"
40 open secretFile (input)
50 line = "Ifmmp-!Xpsme""
60 line[0] = "I" - 1 = "H"
70 i = 0 + 1 = 1
80 True
60 line[1] = "f" - 1 = "e"
70 i = 1 + 1 = 2
80 True
60 line[2] = "m" - 1 = "l"
70 i = 2 + 1 = 3
80 True
60 line[3] = "m" - 1 = "l"
70 i = 3 + 1 = 4
80 True
60 line[4] = "p" - 1 = "o"
70 i = 4 + 1 = 5
80 True
60 line[5] = "-" - 1 = ","
70 i = 5 + 1 =6
80 True
60 line[6] = "!" - 1 = " "
70 i = 6 + 1 = 7
80 True
60 line[7] = "X" - 1 = "W" 
70 i = 7 + 1 = 8
80 True
60 line[8] = "p" - 1 = "o"
70 i = 8 + 1 = 9
80 True
60 line[9] = "s" - 1 = "r"
70 i = 9 + 1 = 10
80 True
60 line[10] = "m" - 1 = "l"
70 i = 10 + 1 = 11
80 True
60 line[11] = "e" - 1 = "d"
70 i = 11 + 1 = 12
80 True
60 line[12] = """ - 1 = "!"
70 i = 12 + 1 = 13
80 False
90 "Hello World"
100 i=0
110 False
999 END

Test Case #3:
purpose: empty input file
inputs: none
expected final result: 
Objective: To allow for the user to input a file for its lines to be decoded and outputted by the console
Author:Kristofer Santo

10 secretFile = "secret.txt"
20 i = 0
30 "Objective: To allow for the user to input a file for its lines to be decoded and outputted by the console
    Author:Kristofer Santo"
40 open secretFile (input)
50 line = NULL
60 line[0] = NULL + 1 = NULL
70 i = 0 + 1 = 1
80 False
90 ""
100 i = 0
110 False
999 END